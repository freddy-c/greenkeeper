// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id              String        @id @default(uuid())
  name            String
  manufacturer    Manufacturer  @relation(fields: [manufacturerId], references: [id])
  manufacturerId  String
  distributors    Distributor[]
  items           Item[]
  type            ProductType
  form            FormType
  nitrogen        Float? // fertiliser-only
  potassium       Float? // fertiliser-only
  phosphorus      Float? // fertiliser-only
  calcium         Float? // fertiliser-only
  magnesium       Float? // fertiliser-only
  sulfur          Float? // fertiliser-only
  iron            Float? // fertiliser-only
  manganese       Float? // fertiliser-only
  specificGravity Float? // liquid-only
}

model Manufacturer {
  id       String    @id @default(uuid())
  name     String
  products Product[]
}

model Distributor {
  id       String    @id @default(uuid())
  name     String
  products Product[]
  Item     Item[]
}

model Item {
  id               String             @id @default(uuid())
  product          Product            @relation(fields: [productId], references: [id])
  price            Float
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  distributor      Distributor        @relation(fields: [distributorId], references: [id])
  productId        String
  distributorId    String
  purchaseDate     DateTime
  initialQuantity  Float
  currentQuantity  Float
  ApplicationItems ApplicationItems[]
}

model Application {
  id               String             @id @default(uuid())
  date             DateTime
  operator         String
  sprayer          Sprayer            @relation(fields: [sprayerId], references: [id])
  ApplicationItems ApplicationItems[]
  waterVolume      Float
  temperature      Float
  windSpeed        Float
  observations     String
  sprayerId        String
}

model ApplicationItems {
  application   Application @relation(fields: [applicationId], references: [id])
  applicationId String
  item          Item        @relation(fields: [itemId], references: [id])
  itemId        String
  quantity      Float

  @@id([applicationId, itemId])
}

model ManagementZone {
  id   String @id @default(uuid())
  name String
  // area        Float
  // coordinates String[]
}

model Equipment {
  id      String        @id @default(uuid())
  name    String
  type    EquipmentType
  sprayer Sprayer?
}

model Sprayer {
  id            String        @id @default(uuid())
  tankCapacity  Float
  nozzleSpacing Float
  equipmentId   String        @unique
  equipment     Equipment     @relation(fields: [equipmentId], references: [id])
  Application   Application[]
}

enum EquipmentType {
  Sprayer
}

enum ProductType {
  Fertiliser
  WettingAgent
  Herbicide
  Fungicide
  GrowthRegulator
}

enum FormType {
  Granular
  Liquid
  Soluble
}
